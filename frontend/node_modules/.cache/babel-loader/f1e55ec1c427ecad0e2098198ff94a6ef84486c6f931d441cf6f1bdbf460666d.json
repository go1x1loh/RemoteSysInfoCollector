{"ast":null,"code":"var _jsxFileName = \"/home/artem/work/cyrs/frontend/src/components/ComputerList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Card, CardContent, Typography, Grid, CircularProgress, Chip } from '@mui/material';\nimport { Computer, Memory } from '@mui/icons-material';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComputerList = () => {\n  _s();\n  const [computers, setComputers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchComputers = async () => {\n      try {\n        const data = await api.getComputers();\n        setComputers(data);\n      } catch (error) {\n        console.error('Error fetching computers:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchComputers();\n  }, []);\n  const handleComputerClick = computerId => {\n    navigate(`/computer/${computerId}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\u041C\\u043E\\u043D\\u0438\\u0442\\u043E\\u0440\\u0438\\u043D\\u0433 \\u043A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: computers.map(computer => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => handleComputerClick(computer.id),\n          sx: {\n            cursor: 'pointer',\n            transition: 'transform 0.2s',\n            '&:hover': {\n              transform: 'scale(1.05)',\n              boxShadow: 3\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Computer, {\n                sx: {\n                  mr: 2,\n                  color: 'primary.main'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: computer.hostname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"IP: \", computer.ip_address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"OS: \", computer.os_info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\",\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, computer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(ComputerList, \"NDCwhoB0H3sx2q7s7QCJERTJ0T0=\", false, function () {\n  return [useNavigate];\n});\n_c = ComputerList;\nexport default ComputerList;\nvar _c;\n$RefreshReg$(_c, \"ComputerList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Box","Card","CardContent","Typography","Grid","CircularProgress","Chip","Computer","Memory","api","jsxDEV","_jsxDEV","ComputerList","_s","computers","setComputers","loading","setLoading","navigate","fetchComputers","data","getComputers","error","console","handleComputerClick","computerId","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","p","variant","gutterBottom","container","spacing","map","computer","item","xs","sm","md","onClick","id","cursor","transition","transform","boxShadow","mb","mr","color","hostname","ip_address","os_info","mt","label","size","_c","$RefreshReg$"],"sources":["/home/artem/work/cyrs/frontend/src/components/ComputerList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Typography,\n    Grid,\n    CircularProgress,\n    Chip\n} from '@mui/material';\nimport { Computer, Memory } from '@mui/icons-material';\nimport api from '../services/api';\n\nconst ComputerList = () => {\n    const [computers, setComputers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchComputers = async () => {\n            try {\n                const data = await api.getComputers();\n                setComputers(data);\n            } catch (error) {\n                console.error('Error fetching computers:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchComputers();\n    }, []);\n\n    const handleComputerClick = (computerId) => {\n        navigate(`/computer/${computerId}`);\n    };\n\n    if (loading) {\n        return (\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n                <CircularProgress />\n            </Box>\n        );\n    }\n\n    return (\n        <Box sx={{ flexGrow: 1, p: 3 }}>\n            <Typography variant=\"h4\" gutterBottom>\n                Мониторинг компьютеров\n            </Typography>\n            <Grid container spacing={3}>\n                {computers.map((computer) => (\n                    <Grid item xs={12} sm={6} md={4} key={computer.id}>\n                        <Card \n                            onClick={() => handleComputerClick(computer.id)}\n                            sx={{ \n                                cursor: 'pointer', \n                                transition: 'transform 0.2s',\n                                '&:hover': { \n                                    transform: 'scale(1.05)',\n                                    boxShadow: 3 \n                                } \n                            }}\n                        >\n                            <CardContent>\n                                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                                    <Computer sx={{ mr: 2, color: 'primary.main' }} />\n                                    <Typography variant=\"h6\">{computer.hostname}</Typography>\n                                </Box>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                    IP: {computer.ip_address}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                    OS: {computer.os_info}\n                                </Typography>\n                                <Box display=\"flex\" justifyContent=\"flex-end\" mt={2}>\n                                    <Chip \n                                        label=\"Подробнее\" \n                                        color=\"primary\" \n                                        size=\"small\" \n                                    />\n                                </Box>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </Box>\n    );\n};\n\nexport default ComputerList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACIC,GAAG,EACHC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,IAAI,EACJC,gBAAgB,EAChBC,IAAI,QACD,eAAe;AACtB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,qBAAqB;AACtD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMqB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMqB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMX,GAAG,CAACY,YAAY,CAAC,CAAC;QACrCN,YAAY,CAACK,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,SAAS;QACNL,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDE,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,mBAAmB,GAAIC,UAAU,IAAK;IACxCP,QAAQ,CAAC,aAAaO,UAAU,EAAE,CAAC;EACvC,CAAC;EAED,IAAIT,OAAO,EAAE;IACT,oBACIL,OAAA,CAACX,GAAG;MAAC0B,OAAO,EAAC,MAAM;MAACC,cAAc,EAAC,QAAQ;MAACC,UAAU,EAAC,QAAQ;MAACC,SAAS,EAAC,OAAO;MAAAC,QAAA,eAC7EnB,OAAA,CAACN,gBAAgB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAEd;EAEA,oBACIvB,OAAA,CAACX,GAAG;IAACmC,EAAE,EAAE;MAAEC,QAAQ,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAP,QAAA,gBAC3BnB,OAAA,CAACR,UAAU;MAACmC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAT,QAAA,EAAC;IAEtC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbvB,OAAA,CAACP,IAAI;MAACoC,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAX,QAAA,EACtBhB,SAAS,CAAC4B,GAAG,CAAEC,QAAQ,iBACpBhC,OAAA,CAACP,IAAI;QAACwC,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAjB,QAAA,eAC5BnB,OAAA,CAACV,IAAI;UACD+C,OAAO,EAAEA,CAAA,KAAMxB,mBAAmB,CAACmB,QAAQ,CAACM,EAAE,CAAE;UAChDd,EAAE,EAAE;YACAe,MAAM,EAAE,SAAS;YACjBC,UAAU,EAAE,gBAAgB;YAC5B,SAAS,EAAE;cACPC,SAAS,EAAE,aAAa;cACxBC,SAAS,EAAE;YACf;UACJ,CAAE;UAAAvB,QAAA,eAEFnB,OAAA,CAACT,WAAW;YAAA4B,QAAA,gBACRnB,OAAA,CAACX,GAAG;cAAC0B,OAAO,EAAC,MAAM;cAACE,UAAU,EAAC,QAAQ;cAAC0B,EAAE,EAAE,CAAE;cAAAxB,QAAA,gBAC1CnB,OAAA,CAACJ,QAAQ;gBAAC4B,EAAE,EAAE;kBAAEoB,EAAE,EAAE,CAAC;kBAAEC,KAAK,EAAE;gBAAe;cAAE;gBAAAzB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAClDvB,OAAA,CAACR,UAAU;gBAACmC,OAAO,EAAC,IAAI;gBAAAR,QAAA,EAAEa,QAAQ,CAACc;cAAQ;gBAAA1B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC,eACNvB,OAAA,CAACR,UAAU;cAACmC,OAAO,EAAC,OAAO;cAACkB,KAAK,EAAC,gBAAgB;cAAA1B,QAAA,GAAC,MAC3C,EAACa,QAAQ,CAACe,UAAU;YAAA;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC,eACbvB,OAAA,CAACR,UAAU;cAACmC,OAAO,EAAC,OAAO;cAACkB,KAAK,EAAC,gBAAgB;cAAA1B,QAAA,GAAC,MAC3C,EAACa,QAAQ,CAACgB,OAAO;YAAA;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC,eACbvB,OAAA,CAACX,GAAG;cAAC0B,OAAO,EAAC,MAAM;cAACC,cAAc,EAAC,UAAU;cAACiC,EAAE,EAAE,CAAE;cAAA9B,QAAA,eAChDnB,OAAA,CAACL,IAAI;gBACDuD,KAAK,EAAC,wDAAW;gBACjBL,KAAK,EAAC,SAAS;gBACfM,IAAI,EAAC;cAAO;gBAAA/B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACf;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC,GA/B2BS,QAAQ,CAACM,EAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgC3C,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACrB,EAAA,CA5EID,YAAY;EAAA,QAGGb,WAAW;AAAA;AAAAgE,EAAA,GAH1BnD,YAAY;AA8ElB,eAAeA,YAAY;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}